import { Markup } from "telegraf";
type HideableIKBtn = ReturnType<typeof Markup.button.callback>;

export const liveKeyboard = (id: number, processStatus: string, oid: string): HideableIKBtn[][] => {
    switch(processStatus){
        case "waiting":
            return [
                [
                    Markup.button.callback("‚úî –ü—Ä–∏–π–Ω—è—Ç–∏", `acceptSupport:${id},${oid}`)
                ]
            ];
            
        case "accepted":
            return [
                [
                    Markup.button.callback("üü¢ –í –ø—Ä–æ—Ü–µ—Å—ñ", `acceptedCheck:${id}`)
                ]
            ];

        case "busy":
            return [
                [
                    Markup.button.callback("üî¥ –ü—Ä–∏–π–Ω—è—Ç–æ —ñ–Ω—à–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º", `busyCheck:${id}`)
                ]
            ];

        case "declined":
            return [
                [
                    Markup.button.callback("‚ùå –ö–∞–Ω–∞–ª –∑–∞–∫—Ä–∏—Ç–∏–π", `declinedCheck:${id}`)
                ]
            ];

        default:
            return [
                [
                    Markup.button.callback("??_–ü–æ–º–∏–ª–∫–∞_—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è_–∫–Ω–æ–ø–∫–∏_??", `errorCheck`)
                ]
            ];
    }
};